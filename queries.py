
queries = {
	'getMe' : "query getMe {\n  me: getMe {\n    _id\n    balance {\n      ton\n      demo\n      __typename\n    }\n    avatar\n    color\n    username\n    isTelegramPremium\n    socketAccessToken\n    clientAppVersion\n    serverTime\n    role\n    __typename\n  }\n}",
	'getMyAuth' : "query getMyAuth {\n  myAuth: getMyAuth {\n    authUrl\n    token\n    __typename\n  }\n}",
	'GetWalletTransactionList' : "query GetWalletTransactionList {\n  transactions: getWalletTransactionList {\n    id\n    type\n    amount\n    status\n    createdAt\n    paymentSystem\n    currency\n    __typename\n  }\n}",
	'getRollGame' : "query getRollGame {\n  game: getRollGame {\n    _id\n    createdAt\n    scheduledAt\n    resultValue\n    resultColor\n    status\n    startPosition\n    fairness {\n      hash\n      decryptedKey\n      __typename\n    }\n    players {\n      blue {\n        amount\n        choice\n        currency\n        user {\n          _id\n          username\n          avatar\n          color\n          __typename\n        }\n        __typename\n      }\n      green {\n        amount\n        choice\n        currency\n        user {\n          _id\n          username\n          avatar\n          color\n          __typename\n        }\n        __typename\n      }\n      red {\n        amount\n        choice\n        currency\n        user {\n          _id\n          username\n          avatar\n          color\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}",
	'placeRollGameBet' : "mutation placeRollGameBet($amount: Float!, $choice: AllowedBetChoice!, $currency: AllowedCurrency!) {\n  bet: placeRollGameBet(amount: $amount, choice: $choice, currency: $currency) {\n    code\n    message\n    __typename\n  }\n}",
	'startMinesGame' : "mutation startMinesGame($betAmount: Float!, $minesCount: Int!, $currency: AllowedCurrency!) {\n  mines: startMinesGame(\n    betAmount: $betAmount\n    minesCount: $minesCount\n    currency: $currency\n  ) {\n    _id\n    fairness {\n      decryptedKey\n      hash\n      __typename\n    }\n    betAmount\n    currency\n    minesCount\n    status\n    ...Playfield\n    step\n    __typename\n  }\n}\n\nfragment Playfield on MinesGame {\n  playfield {\n    cellNumber\n    value\n    status\n    isUsed\n    gameId\n    __typename\n  }\n  __typename\n}",
	'getMinesGame' : "query getMinesGame {\n  mines: getMinesGame {\n    _id\n    fairness {\n      decryptedKey\n      hash\n      __typename\n    }\n    betAmount\n    currency\n    minesCount\n    status\n    ...Playfield\n    step\n    __typename\n  }\n}\n\nfragment Playfield on MinesGame {\n  playfield {\n    cellNumber\n    value\n    status\n    isUsed\n    gameId\n    __typename\n  }\n  __typename\n}",
	'checkMinesGameCell' : "mutation checkMinesGameCell($cellNumber: Int!) {\n  checkMinesGameCell(cellNumber: $cellNumber) {\n    ... on MinesGameResult {\n      r\n      __typename\n    }\n    ... on MinesGame {\n      status\n      ...Playfield\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Playfield on MinesGame {\n  playfield {\n    cellNumber\n    value\n    status\n    isUsed\n    gameId\n    __typename\n  }\n  __typename\n}",
	'endMinesGame' : "mutation endMinesGame {\n  endMinesGame {\n    ... on MinesGameResult {\n      r\n      __typename\n    }\n    ... on MinesGame {\n      status\n      ...Playfield\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Playfield on MinesGame {\n  playfield {\n    cellNumber\n    value\n    status\n    isUsed\n    gameId\n    __typename\n  }\n  __typename\n}",
	'GetMinesGamesFairness' : "query GetMinesGamesFairness {\n  minesGamesFairness: getMinesGamesFairness {\n    _id\n    ...Playfield\n    multiplier\n    status\n    finishedAt\n    fairness {\n      hash\n      decryptedKey\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Playfield on MinesGame {\n  playfield {\n    cellNumber\n    value\n    status\n    isUsed\n    gameId\n    __typename\n  }\n  __typename\n}",
	'GetOverallGamesLog' : "query GetOverallGamesLog($type: GameLogType!) {\n  overallGamesLog: getOverallGamesLog(type: $type) {\n    _id\n    result\n    multiplier\n    choice\n    amount\n    currency\n    game\n    status\n    user {\n      _id\n      username\n      avatar\n      color\n      __typename\n    }\n    __typename\n  }\n}",
	'PlayDuckFlipGame' : "mutation PlayDuckFlipGame($chosenSide: DuckFlipGameSide!, $amount: Float!, $currency: AllowedCurrency!) {\n  playDuckFlipGame(chosenSide: $chosenSide, amount: $amount, currency: $currency) {\n    ...DuckFlipGame\n    __typename\n  }\n}\n\nfragment DuckFlipGame on DuckFlipGame {\n  id\n  status\n  comboCount {\n    currentCombo\n    maxCombo\n    currencyCombo\n    __typename\n  }\n  lastResult {\n    status\n    result\n    betAmount\n    __typename\n  }\n  multiplier\n  __typename\n}",
	'GetDuckFlipGame' : "query GetDuckFlipGame($currency: AllowedCurrency!) {\n  game: getDuckFlipGame(currency: $currency) {\n    ...DuckFlipGame\n    __typename\n  }\n}\n\nfragment DuckFlipGame on DuckFlipGame {\n  id\n  status\n  comboCount {\n    currentCombo\n    maxCombo\n    currencyCombo\n    __typename\n  }\n  lastResult {\n    status\n    result\n    betAmount\n    __typename\n  }\n  multiplier\n  __typename\n}",
	'GetDuckFlipGameLastResults' : "query GetDuckFlipGameLastResults {\n  lastResults: getDuckFlipGameLastResults {\n    id\n    status\n    result\n    __typename\n  }\n}",
	'GetDuckFlipGameFairness' : "query GetDuckFlipGameFairness {\n  fairness: getDuckFlipGameFairness {\n    id\n    status\n    result\n    createdAt\n    encryptedResult\n    decryptedResult\n    __typename\n  }\n}",
	'GetChatRoom' : "query GetChatRoom {\n  chat: getChatRoom {\n    online {\n      count\n      __typename\n    }\n    me {\n      role\n      __typename\n    }\n    room {\n      _id\n      messages {\n        _id\n        content\n        author {\n          _id\n          username\n          color\n          avatar\n          __typename\n        }\n        reactions {\n          content\n          count\n          isPostedByMe\n          __typename\n        }\n        createdAt\n        replyTo {\n          _id\n          content\n          author {\n            _id\n            username\n            color\n            avatar\n            __typename\n          }\n          reactions {\n            content\n            count\n            isPostedByMe\n            __typename\n          }\n          createdAt\n          __typename\n        }\n        __typename\n      }\n      pinnedMessage {\n        _id\n        content\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}",
	'sendMessageToChatRoom' : "mutation sendMessageToChatRoom($content: String!, $replyToId: ObjectId) {\n  messageData: sendMessageToChatRoom(content: $content, replyToId: $replyToId) {\n    _id\n    createdAt\n    __typename\n  }\n}",
	'ReactToMessageInChatRoom' : "mutation ReactToMessageInChatRoom($messageId: ObjectId!, $content: String!) {\n  reactToMessageInChatRoom(messageId: $messageId, content: $content)\n}",
	'GetServerTime' : "query GetServerTime {\n  getServerTime\n}",
	'getMainWalletInfo' : "query getMainWalletInfo {\n  getMainWalletInfo {\n    balance {\n      ton\n      dollar\n      __typename\n    }\n    address\n    __typename\n  }\n}",
	'activatePromocode' : "mutation activatePromocode($code: String!) {\n  activatePromocode(code: $code) {\n    amount\n    type\n    __typename\n  }\n}",
}

socket_queries = {
	'onRollGameUpdate' : "subscription onRollGameUpdate {\n  game: onRollGameUpdate {\n    ... on RollGameStart {\n      payload {\n        _id\n        resultValue\n        resultColor\n        status\n        fairness {\n          hash\n          decryptedKey\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on RollGameNewGame {\n      payload {\n        _id\n        createdAt\n        scheduledAt\n        resultValue\n        resultColor\n        status\n        startPosition\n        fairness {\n          hash\n          decryptedKey\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}",
	'onRollGamesResultHistoryUpdate' : "subscription onRollGamesResultHistoryUpdate {\n  resultHistory: onRollGamesResultHistoryUpdate {\n    _id\n    items {\n      _id\n      resultColor\n      __typename\n    }\n    count {\n      red\n      green\n      blue\n      __typename\n    }\n    __typename\n  }\n}",
	'OnEventInChatRoom' : "subscription OnEventInChatRoom {\n  chat: onEventInChatRoom {\n    name\n    payload {\n      ... on ChatMessage {\n        _id\n        content\n        replyTo {\n          _id\n          content\n          author {\n            _id\n            username\n            color\n            avatar\n            __typename\n          }\n          reactions {\n            content\n            isPostedByMe\n            count\n            __typename\n          }\n          createdAt\n          __typename\n        }\n        author {\n          _id\n          username\n          color\n          avatar\n          __typename\n        }\n        reactions {\n          content\n          count\n          isPostedByMe\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      ... on DeletedMessageInChatRoom {\n        messageId\n        __typename\n      }\n      ... on ReactionEvent {\n        content\n        messageId\n        authorId\n        name\n        __typename\n      }\n      ... on ChatOnline {\n        count\n        type\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}"
}
